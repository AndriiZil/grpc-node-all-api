syntax = "proto3";

package calculator;


service CalculatorService {

  // Unary
  rpc Sum (SumRequest) returns (SumResponse) {};

  // Error handling (error when negative)
  rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {};

  // Server Streaming API
  rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

  // Client Streaming API
  rpc LongGreet (stream LongGreetRequest) returns (LongGreetResponse) {};

  rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // BiDi Streaming
  rpc GreetEveryOne (stream GreetEveryOneRequest) returns (stream GreetEveryOneResponse) {};

  rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number_root = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 maximum = 1;
}

message GreetEveryOneRequest {
  Greeting greet = 1;
}

message GreetEveryOneResponse {
  string result = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  double average = 1;
}

message Greeting {
  string first_name = 1;
  string last_name = 2;
}

message LongGreetRequest {
  Greeting greet = 1;
}

message LongGreetResponse {
  string result = 1;
}

message PrimeNumberDecompositionRequest {
  int32 number = 1;
}

message PrimeNumberDecompositionResponse {
  int32 prime_factor = 1;
}

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 result = 1;
}
